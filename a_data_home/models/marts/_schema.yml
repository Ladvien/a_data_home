version: 2

models:
  - name: mart_message_timeseries
    description: "Granular message-level timeseries data with contact information and temporal analysis. Perfect for LLM consumption and communication pattern analysis."
    
    columns:
      # Primary identifiers
      - name: message_id
        description: "Unique identifier for each message (from message.rowid)"
        data_tests:
          - unique
          - not_null
      
      - name: chat_id
        description: "Identifier for the conversation/chat this message belongs to"
        data_tests:
          - not_null
      
      - name: message_guid
        description: "Apple's global unique identifier for the message"
        data_tests:
          - unique
          - not_null

      # Contact information (flattened for easy access)
      - name: contact_name
        description: "Primary display name for the conversation partner (contact name or chat identifier)"
        data_tests:
          - not_null
      
      - name: first_name
        description: "Contact's first name from address book"
      
      - name: last_name
        description: "Contact's last name from address book"
      
      - name: contact_phone_number
        description: "Full phone number from contacts database"
      
      - name: chat_identifier
        description: "Raw chat identifier (phone number, email, or group ID)"
        data_tests:
          - not_null
      
      - name: contact_match_type
        description: "Quality of contact matching"
        data_tests:
          - accepted_values:
              values: ['exact_match', 'email', 'short_code', 'unknown_number']
      
      - name: phone_type
        description: "Classification of phone number type"
        data_tests:
          - accepted_values:
              values: ['us_number', 'international', 'us_local', 'short_code', 'other']

      # Message content and metadata
      - name: message_text
        description: "Content of the message"
      
      - name: message_length
        description: "Character length of the message text"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      
      - name: message_length_category
        description: "Categorical classification of message length"
        data_tests:
          - accepted_values:
              values: ['very_short', 'short', 'medium', 'long', 'very_long']
      
      - name: is_from_me
        description: "Boolean indicating if message was sent by device owner"
        data_tests:
          - not_null
          - accepted_values:
              values: [true, false]
      
      - name: message_direction
        description: "Human-readable message direction"
        data_tests:
          - accepted_values:
              values: ['sent', 'received']

      # Timing information (multiple granularities)
      - name: message_date
        description: "Timestamp when message was sent/received"
        data_tests:
          - not_null
      
      - name: message_hour
        description: "Message timestamp truncated to hour"
        data_tests:
          - not_null
      
      - name: message_date_day
        description: "Message date truncated to day"
        data_tests:
          - not_null
      
      - name: message_week
        description: "Message date truncated to week"
        data_tests:
          - not_null
      
      - name: message_month
        description: "Message date truncated to month"
        data_tests:
          - not_null
      
      - name: message_quarter
        description: "Message date truncated to quarter"
        data_tests:
          - not_null
      
      - name: message_year
        description: "Message date truncated to year"
        data_tests:
          - not_null
      
      - name: hour_of_day
        description: "Hour component (0-23) extracted from message timestamp"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 23
      
      - name: day_of_week
        description: "Day of week (0=Sunday, 6=Saturday) extracted from message timestamp"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6
      
      - name: day_of_month
        description: "Day of month (1-31) extracted from message timestamp"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 31
      
      - name: month_of_year
        description: "Month (1-12) extracted from message timestamp"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 12
      
      - name: year
        description: "Year extracted from message timestamp"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 2007  # iPhone launch year
              max_value: 2030
      
      - name: time_of_day
        description: "Categorical time period of the message"
        data_tests:
          - accepted_values:
              values: ['morning', 'afternoon', 'evening', 'night']
      
      - name: day_type
        description: "Whether message was sent on weekday or weekend"
        data_tests:
          - accepted_values:
              values: ['weekday', 'weekend']
      
      - name: day_name
        description: "Full name of the day of week"
        data_tests:
          - accepted_values:
              values: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']

      # Message sequence and context
      - name: message_sequence
        description: "Sequential position of this message within the conversation"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
      
      - name: daily_message_sequence
        description: "Sequential position of this message within the day for this conversation"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
      
      - name: cumulative_messages_in_conversation
        description: "Running count of total messages up to this point in the conversation"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
      
      - name: cumulative_sent_in_conversation
        description: "Running count of messages sent by device owner up to this point"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      
      - name: cumulative_received_in_conversation
        description: "Running count of messages received up to this point"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

      # Timing patterns and conversation flow
      - name: response_time_minutes
        description: "Minutes between receiving previous message and sending this reply (null if not a response)"
      
      - name: read_time_minutes
        description: "Minutes between receiving message and reading it (for received messages only)"
      
      - name: minutes_since_prev_message
        description: "Minutes elapsed since the previous message in this conversation"
      
      - name: minutes_until_next_message
        description: "Minutes until the next message in this conversation"
      
      - name: response_timing_category
        description: "Categorical classification of response timing"
        data_tests:
          - accepted_values:
              values: ['conversation_start', 'immediate_follow_up', 'quick_response', 'within_hour', 'within_day', 'delayed_response']
      
      - name: conversation_momentum
        description: "Classification of conversation activity level based on recent messages"
        data_tests:
          - accepted_values:
              values: ['high_momentum', 'medium_momentum', 'low_momentum', 'minimal_momentum']
      
      - name: is_conversation_starter
        description: "Boolean indicating if this is the first message in the conversation"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: is_consecutive_message
        description: "Boolean indicating if this message is from the same sender as the previous message"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: is_part_of_streak
        description: "Boolean indicating if this message continues a streak from the same sender"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: is_session_start
        description: "Boolean indicating if this message starts a new conversation session (>30min gap)"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: is_first_daily_message
        description: "Boolean indicating if this is the first message of the day in this conversation"
        data_tests:
          - accepted_values:
              values: [true, false]

      # Delivery and read status
      - name: date_delivered
        description: "Timestamp when message was delivered (for sent messages)"
      
      - name: date_read
        description: "Timestamp when message was read"
      
      - name: is_delivered
        description: "Boolean indicating if message was delivered"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: is_read
        description: "Boolean indicating if message was read"
        data_tests:
          - accepted_values:
              values: [true, false]
      
      - name: delivery_time_seconds
        description: "Seconds between sending and delivery (for sent messages)"

      # Message characteristics
      - name: service
        description: "Messaging service used (iMessage, SMS, etc.)"
        data_tests:
          - not_null
      
      - name: type
        description: "Apple's internal message type identifier"
      
      - name: cache_has_attachments
        description: "Boolean indicating if message contains attachments"
        data_tests:
          - accepted_values:
              values: [true, false]

      # Aggregated context
      - name: messages_last_10
        description: "Count of messages in this conversation within the last 10 messages (rolling window)"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 10
      
      - name: avg_length_last_5_messages
        description: "Average character length of the last 5 messages in this conversation"
      
      - name: messages_per_day_to_date
        description: "Average messages per day in this conversation up to this point"
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

      # LLM-friendly formatted fields
      - name: formatted_message
        description: "Human-readable formatted message with sender, timestamp, and content for LLM consumption"
        data_tests:
          - not_null
      
      - name: temporal_context
        description: "Contextual description of message timing and position for LLM analysis"
        data_tests:
          - not_null

    # Model-level tests
    data_tests:
      # Ensure message sequence is properly ordered
      - dbt_utils.sequential_values:
          column_name: message_sequence
          group_by_columns: ['chat_id']
      
      # Ensure timestamps are logical
      - dbt_utils.expression_is_true:
          expression: "date_delivered IS NULL OR date_delivered >= message_date"
          config:
            severity: warn
      
      - dbt_utils.expression_is_true:
          expression: "date_read IS NULL OR date_read >= message_date"
          config:
            severity: warn
      
      # Ensure cumulative counts make sense
      - dbt_utils.expression_is_true:
          expression: "cumulative_sent_in_conversation + cumulative_received_in_conversation = cumulative_messages_in_conversation"
      
      # Ensure response times are reasonable (less than 1 week)
      - dbt_utils.expression_is_true:
          expression: "response_time_minutes IS NULL OR response_time_minutes <= 10080"  # 7 days
          config:
            severity: warn